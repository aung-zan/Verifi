services:
  laravel-app:
    container_name: upload
    build:
      context: ./upload
      dockerfile: Dockerfile
    ports:
      - '443:443'
    volumes:
      - './upload/:/var/www/html'
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      bash -c "
        if [ ! -f /var/www/html/.env ]; then
          cd /var/www/html &&
          cp .env.example .env &&
          composer install &&
          php artisan key:generate &&
          php artisan migrate &&
          php artisan jwt:secret
        fi &&
        apache2ctl -D FOREGROUND
      "

  express-app:
    container_name: check
    build:
      context: ./check
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - ./check:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: >
      bash -c "
        if [ ! -f /usr/src/app/.env ]; then
          cp .env.example .env &&
          npm install
        fi &&
        npm start
      "

  postgres:
    container_name: pgsql
    image: postgres:15-alpine
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: 'aungminzan'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_DB: 'verifi'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aungminzan -d verifi"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  rabbitmq:
    container_name: verifi-rabbitmq
    image: rabbitmq:4.0-management
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 10s
      retries: 5
