name: Laravel

on:
  push:
    branches: [ "main" ]
    paths:
      - 'upload/**'  # Only trigger on changes in upload directory
  pull_request:
    branches: [ "main" ]
    paths:
      - 'upload/**'

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./upload  # Set default working directory for all run steps

    services:
      pgsql:
        image: postgres:17
        env:
          POSTGRES_USER: 'aungminzan'
          POSTGRES_PASSWORD: 'password'
          POSTGRES_DB: 'verifi_testing'
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, mysql, pdo, tokenizer, pgsql
          coverage: none
          ini-values: memory_limit=512M

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('upload/**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-scripts

      - name: Create testing environment file
        run: |
          cp .env.example .env
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=verifi_testing" >> .env
          echo "DB_USERNAME=aungminzan" >> .env
          echo "DB_PASSWORD=password" >> .env

      - name: Generate key
        run: php artisan key:generate

      - name: Generate secret key
        run: php artisan jwt:secret

      - name: Run tests
        run: php artisan test
